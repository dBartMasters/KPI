-- CREATE OR REPLACE TABLE PRODUCT_ANALYTICS.KPI_BASE AS
EXPLAIN
    SELECT O.NAME,
        O.ACCOUNT_CLASS__C,
        O.CLASS__C,
        -- CLOSEDATE IS THE INDICATOR FOR ACTIVITY TO SIGNAL A NEW CUSTOMER OR ACTIVE CUSTOMER
        --  FOR PRESEASON, WE TAKE THE FUNDING DATE, FOR OTHERS WE USE THE CLOSEDATE
        IFF(O.RECORD_TYPE_NAME__C = 'PreSeason',O.FUNDING_DATE__C,O.CLOSEDATE) AS ACTIVITY_DATE,
        O.FUNDING_DATE__C,
        O.CLOSED_WON_DATE__C,
        O.CONTRACT_TYPE__C,
        O.CONTRACT_SHIP_DATE__C,
        --GMV
        COALESCE(F.ESTIMATED_GMV, O.GMV__C,O.FORECASTED_GMV__C) AS GMV,
        F.TOTAL_GMV,
        --REVENUE
        NVL(F.TOTAL_BASE_FEES,0)+NVL(F.TOTAL_LATE_FEES,0)+NVL(F.BUYER_MARKETPLACE_FEE,0)+NVL(F.SELLER_MARKETPLACE_FEE,0)+NVL(F.ADMIN_FEE_T,0) AS F_REVENUE,
        NVL(PSAR.COMMISSION,0) + NVL(PSAR.LATE_FEES,0) + NVL(PSAR.APP_FEE,0) AS PS_REVENUE,
        IFF(PS_REVENUE>0, PS_REVENUE, F_REVENUE) AS REVENUE,
        --
        O.ISCLOSED,
        DATE_TRUNC('MONTH', ACTIVITY_DATE) AS CLOSED_MONTH,
        DATE_TRUNC('YEAR', ACTIVITY_DATE) AS CLOSED_YEAR,
        O.ISWON,
         -- FOR MATCHING TO FINANCE
        O.OPPORTUNITY_NUMBER__C,
        O.OMS_TRANSACTION_ID__C,
        O.PRODUCT_TYPE__C,
        O.RECORDTYPEID,
        O.RECORD_TYPE_NAME__C,
        NVL(O.PRODUCT_TYPE__C, O.RECORD_TYPE_NAME__C) AS PRODUCT_LABEL,
        O.STAGENAME,
        O.SLUG__C,
        --FROM ACCOUNT
        A.ACCOUNT_TYPE__C,
        A.ACCOUNT_NUMBER__C,
        A.ACTIVE_PRODUCTS__C,
        O.ACCOUNTID,
        A.FULL_ACCOUNT_ID__C,
        A.ID,
        A.NAME AS ACCOUNT_NAME,
        A.NEW_CLASS__C,
        A.PARENTID,
        A.COMPANY_SIZE__C,
        A.CLASSIFICATION__C,
        --WINDOW FUNCTIONS
        -- on value per account
        ROW_NUMBER() OVER (
            PARTITION BY A.ID
            ORDER BY ACTIVITY_DATE
        ) AS ACCOUNT_CLOSEDATE_ROW,
        FIRST_VALUE(ACTIVITY_DATE) OVER (
            PARTITION BY A.ID
            ORDER BY ACTIVITY_DATE
         ) AS FIRST_CLOSEDATE,
        IFNULL(YEAR(FIRST_CLOSEDATE),1900) AS COHORT_YEAR,
        IFNULL(DATE_TRUNC('MONTH',FIRST_CLOSEDATE),TRY_TO_DATE('01-01-1900')) AS COHORT_YM,
        IFNULL(FIRST_VALUE(PRODUCT_LABEL) OVER (
            PARTITION BY A.ID 
            ORDER BY ACTIVITY_DATE
        ),'NULL') AS FIRST_PRODUCT,
        IFNULL(LAST_VALUE(PRODUCT_LABEL) OVER (
            PARTITION BY A.ID 
            ORDER BY ACTIVITY_DATE
        ),'NULL') AS LAST_PRODUCT,        
        CASE
        WHEN FIRST_PRODUCT IN ('InSeason','QP96', 'QP80','QP Marine','InSeason w/Quote','QP50','1-Click','RP Trade','Factoring','End Buyer') THEN 'QP'
        WHEN FIRST_PRODUCT IN ('Marketplace Members','Marketplace shipments','Trading only','Trade Agreement','PN Shippers') THEN 'TRADING ONLY'
        WHEN FIRST_PRODUCT = 'PreSeason' then 'PRESEASON'
        ELSE 'OTHER'
        END AS FIRST_PRODUCT_CATEGORY,
        CASE
        WHEN LAST_PRODUCT IN ('InSeason','QP96', 'QP80','QP Marine','InSeason w/Quote','QP50','1-Click','RP Trade','Factoring','End Buyer') THEN 'QP'
        WHEN LAST_PRODUCT IN ('Marketplace Members','Marketplace shipments','Trading only','Trade Agreement','PN Shippers') THEN 'TRADING ONLY'
        WHEN LAST_PRODUCT = 'PreSeason' then 'PRESEASON'
        ELSE 'OTHER'
        END AS LAST_PRODUCT_CATEGORY,
        CASE
        WHEN PRODUCT_LABEL IN ('InSeason','QP96', 'QP80','QP Marine','InSeason w/Quote','QP50','1-Click','RP Trade','Factoring','End Buyer') THEN 'QP'
        WHEN PRODUCT_LABEL IN ('Marketplace Members','Marketplace shipments','Trading only','Trade Agreement','PN Shippers') THEN 'TRADING ONLY'
        WHEN PRODUCT_LABEL = 'PreSeason' then 'PRESEASON'
        ELSE 'OTHER'
        END AS PRODUCT_LABEL_CATEGORY,
        IFNULL(FIRST_VALUE(A.CLASSIFICATION__C) OVER (
            PARTITION BY A.ID 
            ORDER BY ACTIVITY_DATE
        ),'NULL') AS ACCOUNT_CLASS,
        IFNULL(FIRST_VALUE(A.BILLINGCOUNTRY) OVER (
            PARTITION BY A.ID 
            ORDER BY ACTIVITY_DATE
        ),'NULL') AS COUNTRY,
        SUM(GMV) OVER (
            PARTITION BY A.ID
        ) AS ACCOUNT_GMV,
        SUM(REVENUE) OVER (
            PARTITION BY A.ID
        ) AS ACCOUNT_REVENUE
    FROM PROD_ANALYTICS.SALESFORCE.OPPORTUNITY O
        JOIN PROD_ANALYTICS.SALESFORCE.ACCOUNT A ON O.ACCOUNTID = A.ID
        LEFT JOIN PROD_ANALYTICS.PRODUCT_ANALYTICS.KPI_MP_FEE F ON O.SLUG__C = F.SLUG
        LEFT JOIN PROD_ANALYTICS.PRODUCT_ANALYTICS.VW_FINANCE_PS_AR_REPORT PSAR ON SUBSTR(O.OPPORTUNITY_NUMBER__C, 6, 3) = PSAR.ID
            AND O.RECORD_TYPE_NAME__C ILIKE '%PRESEASON%'
    WHERE ( --Preseason and other products that have closed/won
            NOT O.ISDELETED
            AND O.ISCLOSED
            AND O.ISWON
        )
        OR ( --Marketplace products
            UPPER(O.RECORD_TYPE_NAME__C) = 'MARKETPLACE SHIPMENTS' --JUST THOSE ON DIGITAL MARKETPLACE
            AND UPPER(O.STAGENAME) NOT IN ('CANCELED', 'REJECTED')
            AND NOT O.ISDELETED
        )